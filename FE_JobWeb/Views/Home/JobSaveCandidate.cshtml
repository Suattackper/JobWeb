@using Data_JobWeb.Entity;
@using FE_JobWeb.Others
@inject ApplicationUser user
@model PaginatedList<JobSeekerSavedJobPosting>
@{
    ViewData["Title"] = "JobSaveCandidate";
    Layout = "~/Views/Shared/_LayoutRecuiter.cshtml";
}

<div id="content">
    <div class="content-admin-main">
        <div class="wt-admin-right-page-header clearfix">
            <h2>Danh sách công việc đã lưu</h2>
            <div class="breadcrumbs">
                <a href="@Url.Action("Index","Home")">Trang chủ</a><a href="@Url.Action("IndexCandidate","Home")">Dasboard</a><span>Việc đã lưu</span>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading wt-panel-heading p-a20">
                <h4 class="panel-tittle m-a0">
                    <i class="feather-save"></i> Việc làm đã lưu
                </h4>
            </div>

            <div class="panel-body wt-panel-body m-b30 ">
                <div class="col-lg-12">
                    <div class="user-profile-card">
                        <div class="table-responsive profile-applied-job">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Thông tin công việc</th>
                                        <th>Ngày lưu</th>
                                        <th>Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Items != null && Model.Items.Count > 0)
                                    {
                                        JobSeekerContext db = new JobSeekerContext();
                                        int d = 0;
                                        foreach (JobSeekerSavedJobPosting i in Model.Items)
                                        {
                                            JobSeekerJobPosting job = db.JobSeekerJobPostings.FirstOrDefault(p => p.Id == i.JobPostingId);
                                            if (job == null) job = new JobSeekerJobPosting();
                                            JobSeekerEnterprise ent = db.JobSeekerEnterprises.FirstOrDefault(p => p.EnterpriseId == job.EnterpriseId);
                                            if (ent == null) ent = new JobSeekerEnterprise();
                                            JobSeekerCandidateProfile can = db.JobSeekerCandidateProfiles.FirstOrDefault(p => p.CandidateId == user.User.Id);
                                            if (can == null) can = new JobSeekerCandidateProfile();
                                            d++;
                                            <tr>
                                                <td>@d</td>
                                                <td>
                                                    <div class="profile-job-info">
                                                        <img src="@ent.LogoUrl" alt="">
                                                        <div class="profile-job-content">
                                                            <div class="job-title">
                                                                <h6><a href="@Url.Action("JobDetailHome", "Home", new {id = job.Id})">@job.JobTitle</a></h6>
                                                                <a href="@Url.Action("CompanyDetailHome", "Home", new {id = job.EnterpriseId})" class="job-employer">
                                                                    <i class="far fa-building"></i>
                                                                    @ent.FullCompanyName
                                                                </a>
                                                            </div>
                                                            <ul class="profile-job-list">
                                                                <li><i class="far fa-money-bill-alt"></i> @string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0} đ", job.SalaryMin) - @string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0} đ", job.SalaryMax)</li>
                                                                <li>
                                                                    <i class="feather-map-pin"></i>  @job.Province
                                                                </li>
                                                                <li>
                                                                    <i class="feather-calendar"></i>  @(job.ExpiredTime.HasValue ? job.ExpiredTime.Value.ToString("dd/MM/yyyy") : "Error")
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>@(i.SavedAt.HasValue ? i.SavedAt.Value.ToString("dd/MM/yyyy") : "Error")</td>
                                                <td>
                                                    <a href="@Url.Action("JobSaveCandidateDelete","Home", new {id = i.Id})" class="btn btn-outline-danger btn-sm">
                                                        <i class="feather-heart"></i> Hủy lưu
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>

                            <div class="pagination-outer">
                                <div class="pagination-style1">
                                    <ul class="clearfix">
                                        <!-- Previous Page -->
                                        @if (Model.HasPreviousPage)
                                        {
                                            <li class="prev">
                                                <a href="@Url.Action("JobSaveCandidate", "Home", new { page = Model.CurrentPage - 1 })">
                                                    <span>
                                                        <i class="fa fa-angle-left"></i>
                                                    </span>
                                                </a>
                                            </li>
                                        }
                                        <!-- Page Numbers -->
                                        @for (var i = 1; i <= Model.TotalPages; i++)
                                        {
                                            if (Model.TotalPages >= 5)
                                            {
                                                if (i == Model.CurrentPage - 1)
                                                {
                                                    if (i > 3)
                                                    {
                                                        <li>
                                                            <a class="javascript:;" href="javascript:;">
                                                                <i class="fa fa-ellipsis-h"></i>
                                                            </a>
                                                        </li>
                                                    }
                                                }
                                                if (i == 1 || i == 2 || i == Model.TotalPages || i == Model.TotalPages - 1 || i == Model.CurrentPage || i == Model.CurrentPage - 1 || i == Model.CurrentPage + 1)
                                                {
                                                    <li class="@(i == Model.CurrentPage ? "active" : "")">
                                                        <a href="@Url.Action("JobSaveCandidate", "Home", new { page = i })">@i</a>
                                                    </li>
                                                }
                                                if (i == Model.CurrentPage + 1)
                                                {
                                                    if (i < Model.TotalPages - 2)
                                                    {
                                                        <li>
                                                            <a class="javascript:;" href="javascript:;">
                                                                <i class="fa fa-ellipsis-h"></i>
                                                            </a>
                                                        </li>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <li class="@(i == Model.CurrentPage ? "active" : "")">
                                                    <a href="@Url.Action("JobSaveCandidate", "Home", new { page = i })">@i</a>
                                                </li>
                                            }
                                        }
                                        <!-- Next Page -->
                                        @if (Model.HasNextPage)
                                        {
                                            <li class="next">
                                                <a href="@Url.Action("JobSaveCandidate", "Home", new { page = Model.CurrentPage + 1 })">
                                                    <span>
                                                        <i class="fa fa-angle-right"></i>
                                                    </span>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

